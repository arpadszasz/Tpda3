#!/usr/bin/perl

use strict;
use warnings;

use Getopt::Long;
use Pod::Usage;

use Tpda3;
use Tpda3::Config;

# Parse options and print usage if there is a syntax error,
# or if usage was explicitly requested.
my $help    = q{};
my $man     = q{};
my $version;
my $list;
my $init    = q{};
my $user;
my $pass;

# Process options.
if ( @ARGV > 0 ) {
    GetOptions(
        'help|?'    => \$help,
        'man'       => \$man,
        'version'   => \$version,
        'list:s'    => \$list,
        'user=s'    => \$user,
        'password=s'=> \$pass,
        'init:s'    => \$init,
        ),
        or pod2usage(2);
}
if ( $man or $help or $version or $#ARGV >= 0 ) {
    pod2usage( VERBOSE => 2 ) if $man;
    if ($version) { tpda3_version(); exit 0; }
    if ($help)    { tpda3_version(); pod2usage(1); }
}

my $cfname = shift;         # Runtime configuration name or database name

#- Options
my $opts = {};

# Check 'list' and 'init' options first
if ( defined $list xor $init ) {

    tpda3_version();

    # Initialize configurations
    my $cfg = Tpda3::Config->instance();

    if ( defined $list ) {
        $cfg->list_configs($list);
        exit 0;
    }
    if ( $init ) {
        $cfg->config_init($init);
        exit 0;
    }
}

# Check connection configuration name option last
if ( $cfname ) {

    tpda3_version();

    # Other options
    $opts->{user} = $user;
    $opts->{pass} = $pass;
    $opts->{cfname} = $cfname;

    # Go and run the app
    Tpda3->new( $opts )->run;

    print "Normal exit.\n";
    exit 0;
}

# If no other option, usage
tpda3_version();
pod2usage(1);

#- Print version

sub tpda3_version {

    my $ver = $Tpda3::VERSION;
    print "Tpda3 (Tiny Perl Database Application) v$ver\n(C) 2010 Stefan Suciu\n\n";
}

__END__

=head1 NAME

tpda3 - Tpda (Tiny Perl Database Application the 3'rd)

=head1 SYNOPSIS

tpda3 -list

tpda3 -init <connection>

tpda3 <connection> [-user <user> [-password <pass>]]

Options:

 -init <connection>   Initialize (create) configuration path
 -list                List available configuration names
 -user                User name
 -password            Password
 -help                Brief help message
 -man                 Full documentation
 -version             Current version

=head1 DESCRIPTION

B<Tpda3> (Tiny Perl Database Application) is a classic desktop,
database application framework, written in Perl and pTk.

=head2 Configuration

A configuration name is the name of the directory underneath the
B<.tpda3/apps/> path.  This directory contains two other directories
B<etc> and B<scr>. The B<etc> directory contains two required
configuration files. The first is B<connection.yml>.  This file has to
be updated with the connection configuration for your database.  The
other configuration file is B<menu.yml>.  The other directory named
B<etc> is the place where your screen configuration files are stored.

Configuration files are in YAML format, the format described in the
documentation of the YAML::Tiny module, except the screen
configuration files which are in Config::General format.

=head1 OPTIONS DETAILS

=over

=item B<-init> <connection>

Initialize (create) configuration paths and created default
configuration files from template.  A connection name is required.

=item B<-list>

List all configuration names.  Usually a configuration name is the
same as the database name, but this is not a requirement.

=item B<-user>

Sets the user name.  If the user is specified but not the password than
the login dialog will ask only for the password.  If both the password
and user are provided then the login dialog will be skipped.

=item B<-password>

Sets the password.  If the user option is not specified than show
usage and exit.  If the user is specified skip the login dialog.

=item B<-man>

Prints the manual page and exits.

=item B<-version>

Print current version information.

=back

=head1 LICENSE

Copyright (C) 2010  Stefan Suciu
This program is free software, you can redistribute it and/or
modify it under the terms of GNU General Public License.

=head1 AUTHOR

Stefan Suciu <stefansbv 'at' users . sourceforge . net>

=cut
